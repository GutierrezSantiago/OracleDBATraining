CREATE OR REPLACE PACKAGE BODY PCK_EMPLOYEES AS
    
    PROCEDURE PR_ALTA_EMPLOYEES
    (
        P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE,
        P_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE,
        P_LAST_NAME	EMPLOYEES.LAST_NAME%TYPE,
        P_EMAIL	EMPLOYEES.EMAIL%TYPE,
        P_PHONE_NUMBER	EMPLOYEES.PHONE_NUMBER%TYPE,
        P_HIRE_DATE	EMPLOYEES.HIRE_DATE%TYPE,
        P_JOB_ID EMPLOYEES.JOB_ID%TYPE,
        P_SALARY EMPLOYEES.SALARY%TYPE,
        P_COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE,
        P_MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE,
        P_DEPARTMENT_ID	EMPLOYEES.DEPARTMENT_ID%TYPE,
        P_ID  OUT NUMBER, 
        P_ERROR OUT VARCHAR2
    )
    AS
    BEGIN
    
        INSERT INTO EMPLOYEES (
            employee_id,
            first_name,
            last_name,
            email,
            phone_number,
            hire_date,
            job_id,
            salary,
            commission_pct,
            manager_id,
            department_id
        ) VALUES (
            P_EMPLOYEE_ID,
            P_FIRST_NAME,
            P_LAST_NAME,
            P_EMAIL,
            P_PHONE_NUMBER,
            P_HIRE_DATE,
            P_JOB_ID,
            P_SALARY,
            P_COMMISSION_PCT,
            P_MANAGER_ID,
            P_DEPARTMENT_ID
        );
        COMMIT;
        
        P_ID := 1;
        
    EXCEPTION WHEN OTHERS THEN
        P_ID := -1;
        P_ERROR := SQLERRM;
        DBMS_OUTPUT.PUT_LINE('ERROR : EMPLOYEE_ID ' || P_EMPLOYEE_ID);
        
    END;
    
    PROCEDURE PR_BAJA_EMPLOYEES(P_EMPLOYEE_ID IN NUMBER, P_ID OUT NUMBER, P_ERROR OUT VARCHAR2) AS
    BEGIN
        DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID=P_EMPLOYEE_ID;
        COMMIT;
        P_ID := 1;
    EXCEPTION WHEN OTHERS THEN
        P_ID := -1;
        P_ERROR := SQLERRM;
        DBMS_OUTPUT.PUT_LINE('ERROR : EMPLOYEE_ID ' || P_EMPLOYEE_ID);
    END;
    
    PROCEDURE PR_MODIFICACION_EMPLOYEES(P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE,
        P_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE,
        P_LAST_NAME	EMPLOYEES.LAST_NAME%TYPE,
        P_EMAIL	EMPLOYEES.EMAIL%TYPE,
        P_PHONE_NUMBER	EMPLOYEES.PHONE_NUMBER%TYPE,
        P_HIRE_DATE	EMPLOYEES.HIRE_DATE%TYPE,
        P_JOB_ID EMPLOYEES.JOB_ID%TYPE,
        P_SALARY EMPLOYEES.SALARY%TYPE,
        P_COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE,
        P_MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE,
        P_DEPARTMENT_ID	EMPLOYEES.DEPARTMENT_ID%TYPE,
        P_ID OUT NUMBER, 
        P_ERROR OUT VARCHAR2) 
    AS
        V_FIRST_NAME VARCHAR2(200);
        V_LAST_NAME	VARCHAR2(50);
        V_EMAIL	VARCHAR2(200);
        V_PHONE_NUMBER	VARCHAR2(200);
        V_HIRE_DATE	DATE;
        V_JOB_ID VARCHAR2(50);
        V_SALARY NUMBER;
        V_COMMISSION_PCT NUMBER;
        V_MANAGER_ID NUMBER;
        V_DEPARTMENT_ID	NUMBER;
        
        V_ROW_COUNT NUMBER;
    BEGIN
         
         SELECT COUNT(*) AS CANT_FILAS INTO V_ROW_COUNT FROM EMPLOYEES WHERE EMPLOYEE_ID = P_EMPLOYEE_ID;
         IF V_ROW_COUNT = 0 THEN
            RAISE_APPLICATION_ERROR(20456, 'NO EXISTE NINGUN EMPLEADO CON ESE EMPLOYEE_ID');
         END IF;
         
         SELECT FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, V_MANAGER_ID, V_DEPARTMENT_ID INTO V_FIRST_NAME, V_LAST_NAME, V_EMAIL, V_PHONE_NUMBER, V_HIRE_DATE, V_JOB_ID, V_SALARY, V_COMMISSION_PCT, V_MANAGER_ID, V_DEPARTMENT_ID FROM EMPLOYEES WHERE EMPLOYEE_ID=P_EMPLOYEE_ID;
         IF P_FIRST_NAME IS NOT NULL THEN
             V_FIRST_NAME := P_FIRST_NAME;
         END IF;
         IF P_LAST_NAME IS NOT NULL THEN
            V_LAST_NAME := P_LAST_NAME;
         END IF;
         IF P_EMAIL IS NOT NULL THEN
            V_EMAIL := P_EMAIL;
         END IF;
         IF P_PHONE_NUMBER IS NOT NULL THEN
            V_PHONE_NUMBER := P_PHONE_NUMBER;
         END IF;
         IF P_HIRE_DATE IS NOT NULL THEN
            V_PHONE_NUMBER := P_HIRE_DATE;
         END IF;
         IF P_JOB_ID IS NOT NULL THEN
            V_JOB_ID := P_JOB_ID;
         END IF;
         IF P_SALARY IS NOT NULL THEN
            V_SALARY := P_SALARY;
         END IF;
         IF P_COMMISSION_PCT IS NOT NULL THEN
            V_COMMISSION_PCT := P_COMMISSION_PCT;
         END IF;
         IF P_MANAGER_ID IS NOT NULL THEN
            V_MANAGER_ID := P_MANAGER_ID;
         END IF;
         IF P_DEPARTMENT_ID IS NOT NULL THEN
            V_DEPARTMENT_ID := P_DEPARTMENT_ID;
         END IF;
        
        UPDATE EMPLOYEES
        SET FIRST_NAME = V_FIRST_NAME, LAST_NAME = V_LAST_NAME, EMAIL = V_EMAIL, PHONE_NUMBER = V_PHONE_NUMBER, HIRE_DATE = V_HIRE_DATE, JOB_ID = V_JOB_ID, SALARY = V_SALARY, COMMISSION_PCT = V_COMMISSION_PCT, MANAGER_ID = V_MANAGER_ID, DEPARTMENT_ID = V_DEPARTMENT_ID 
        WHERE EMPLOYEE_ID = P_EMPLOYEE_ID;
        COMMIT;
        
         
         P_ID := 1;
    EXCEPTION WHEN OTHERS THEN
        P_ID := -1;
        P_ERROR := SQLERRM;
        DBMS_OUTPUT.PUT_LINE('ERROR : EMPLOYEE_ID ' || P_EMPLOYEE_ID);
    END;   
    
    PROCEDURE PR_CONSULTA_EMPLOYEES(P_EMPLOYEE_ID	EMPLOYEES.EMPLOYEE_ID%TYPE,
        P_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE,
        P_LAST_NAME	EMPLOYEES.LAST_NAME%TYPE,
        P_EMAIL	EMPLOYEES.EMAIL%TYPE,
        P_PHONE_NUMBER	EMPLOYEES.PHONE_NUMBER%TYPE,
        P_HIRE_DATE	EMPLOYEES.HIRE_DATE%TYPE,
        P_JOB_ID EMPLOYEES.JOB_ID%TYPE,
        P_SALARY EMPLOYEES.SALARY%TYPE,
        P_COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE,
        P_MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE,
        P_DEPARTMENT_ID	EMPLOYEES.DEPARTMENT_ID%TYPE,
        O_CUR OUT SYS_REFCURSOR,
        P_ID  OUT NUMBER, 
        P_ERROR OUT VARCHAR2) 
    AS
    BEGIN
        OPEN O_CUR FOR 
            SELECT *
            FROM EMPLOYEES E
            WHERE
                ( E.EMPLOYEE_ID = P_EMPLOYEE_ID OR P_EMPLOYEE_ID IS NULL)
                AND
                ( E.FIRST_NAME = P_FIRST_NAME OR P_FIRST_NAME IS NULL)
                AND
                ( E.LAST_NAME = P_LAST_NAME OR P_LAST_NAME IS NULL)
                AND
                ( E.EMAIL = P_EMAIL OR P_EMAIL IS NULL)
                AND
                ( E.PHONE_NUMBER = P_PHONE_NUMBER OR P_PHONE_NUMBER IS NULL)
                AND
                ( E.HIRE_DATE = P_HIRE_DATE OR P_HIRE_DATE IS NULL)
                AND
                ( E.JOB_ID = P_JOB_ID OR P_JOB_ID IS NULL)
                AND
                ( E.SALARY = P_SALARY OR P_SALARY IS NULL)
                AND
                ( E.COMMISSION_PCT = P_COMMISSION_PCT OR P_COMMISSION_PCT IS NULL)
                AND
                ( E.MANAGER_ID = P_MANAGER_ID OR P_MANAGER_ID IS NULL)
                AND
                ( E.DEPARTMENT_ID = P_DEPARTMENT_ID OR P_DEPARTMENT_ID IS NULL);
        P_ID := 1;
    EXCEPTION
        WHEN OTHERS THEN
            P_ID := -1;
            P_ERROR := SQLERRM;
    END;
    
END;